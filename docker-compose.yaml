services: 
  db:
    image: postgres:14-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: "advanced_backend"
    ports:
      - "5432:5432"  
    volumes:
      - ./db:/docker-entrypoint-initdb.d
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: ./api
    volumes:
      - ./api/src:/backend/api/src
      - ./api/tsconfig.json:/backend/api/tsconfig.json
      - /backend/api/node_modules
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      db:
        condition: service_healthy
    command: npm run dev
    restart: unless-stopped

volumes:
  db-data:
# Stage 1: Development
FROM node:24-alpine AS dev

# Set the working directory inside the container
WORKDIR /backend/api

# Copy package.json and package-lock.json to install dependencies
COPY package*.json ./

# Install dependencies using npm ci for a clean, reproducible build
RUN npm ci

# Copy tsconfig.json for TypeScript configuration and path aliases
COPY tsconfig.json ./

# Expose port 3000 for the application
EXPOSE 3000

# Create a non-root user and group for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Change ownership of the working directory to the non-root user
RUN chown -R nextjs:nodejs /backend/api

# Switch to the non-root user for running the application
USER nextjs

# Start the development server with tsx watch for hot reloading
CMD ["npm", "run", "dev"]

# Stage 2: Production
FROM node:24-alpine AS prod

# Set working directory
WORKDIR /backend/api

# Copy package files and install all dependencies (including dev for build)
COPY package*.json ./

# Install all dependencies for build
RUN npm ci

# Copy all source files
COPY . .

# Build the project (TypeScript / dist)
RUN npm run build

# Remove dev dependencies to reduce image size
RUN npm prune --production

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001
RUN chown -R nextjs:nodejs /backend/api
USER nextjs

# Expose application port
EXPOSE 3000

# Start the production server
CMD ["node", "dist/server.js"]
